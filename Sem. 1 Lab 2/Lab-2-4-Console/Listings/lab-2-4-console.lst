


ARM Macro Assembler    Page 1 


    1 00000000         ;
    2 00000000         ; CSU11021 Introduction to Computing I 2019/2020
    3 00000000         ; UPPER CASE echo to console
    4 00000000         ;
    5 00000000         
    6 00000000                 AREA             RESET, CODE, READONLY
    7 00000000                 ENTRY
    8 00000000         
    9 00000000 EB000009        BL               inithw      ; Get ready for con
                                                            sole I/O
   10 00000004         
   11 00000004         doGet
   12 00000004 EB000012        BL               get
   13 00000008         
   14 00000008         ; You should modify the character code here, converting
   15 00000008         ;  lower-case letters to UPPER-CASE
   16 00000008         
   17 00000008 E3500061        CMP              R0, #'a'    ; if (input >= 'a'
   18 0000000C 3A000002        BLO              nlcase      ; &&
   19 00000010 E350007A        CMP              R0, #'z'    ; input <= 'z')
   20 00000014 8A000000        BHI              nlcase      ; {
   21 00000018 E2400020        SUB              R0, R0, #0x20 ;  input = input 
                                                            - 0x20
   22 0000001C         nlcase                               ; }
   23 0000001C         
   24 0000001C         
   25 0000001C         ; The next instruction will send the character code in R
                       0 to
   26 0000001C         ;  the console, where it will be displayed
   27 0000001C         
   28 0000001C EB000015        BL               put
   29 00000020 E350000D        CMP              R0, #0x0D   ; Stop when RETURN 
                                                            is entered (ASCII 0
                                                            x0A)
   30 00000024 1AFFFFF6        BNE              doGet
   31 00000028         
   32 00000028 EAFFFFFE 
                       STOP    B                STOP
   33 0000002C         
   34 0000002C         ;
   35 0000002C         ; You are free to ignore everything below this line
   36 0000002C         ;
   37 0000002C         
   38 0000002C E002C000 
                       PINSEL0 EQU              0xE002C000
   39 0000002C E000C000 
                       U0RBR   EQU              0xE000C000
   40 0000002C E000C000 
                       U0THR   EQU              0xE000C000
   41 0000002C E000C00C 
                       U0LCR   EQU              0xE000C00C
   42 0000002C E000C014 
                       U0LSR   EQU              0xE000C014
   43 0000002C         
   44 0000002C         ;
   45 0000002C         ; inithw subroutines
   46 0000002C         ; performs hardware initialisation, including console
   47 0000002C         ; parameters:
   48 0000002C         ; none



ARM Macro Assembler    Page 2 


   49 0000002C         ; return value:
   50 0000002C         ; none
   51 0000002C         ;
   52 0000002C         inithw
   53 0000002C E59FD078        LDR              SP, =0x40010000 ; initialse SP
   54 00000030 E92D0003        PUSH             {R0-R1}
   55 00000034 E59F0074        LDR              R0, =PINSEL0 ; enable UART0 TxD
                                                             and RxD signals
   56 00000038 E3A01050        MOV              R1, #0x50
   57 0000003C E5C01000        STRB             R1, [R0]
   58 00000040 E59F006C        LDR              R0, =U0LCR  ; 7 data bits + par
                                                            ity
   59 00000044 E3A01002        LDR              R1, =0x02
   60 00000048 E5C01000        STRB             R1, [R0]
   61 0000004C E8BD0003        POP              {R0-R1}
   62 00000050 E12FFF1E        BX               LR
   63 00000054         
   64 00000054         ;
   65 00000054         ; get subroutine
   66 00000054         ; returns the ASCII code of the next character read on t
                       he console
   67 00000054         ; parameters:
   68 00000054         ; none
   69 00000054         ; return value:
   70 00000054         ; R0 - ASCII code of the character read on teh console (
                       byte)
   71 00000054         ;
   72 00000054 E52D1004 
                       get     PUSH             {R1}
   73 00000058 E59F1058        LDR              R1, =U0LSR  ; R1 -> U0LSR (Line
                                                             Status Register)
   74 0000005C E5910000 
                       get0    LDR              R0, [R1]    ; wait until
   75 00000060 E2100001        ANDS             R0, #0x01   ; receiver data
   76 00000064 0AFFFFFC        BEQ              get0        ; ready
   77 00000068 E59F104C        LDR              R1, =U0RBR  ; R1 -> U0RBR (Rece
                                                            iver Buffer Registe
                                                            r)
   78 0000006C E5D10000        LDRB             R0, [R1]    ; get received data
                                                            
   79 00000070 E49D1004        POP              {R1}
   80 00000074 E12FFF1E        BX               LR          ; return
   81 00000078         
   82 00000078         ;
   83 00000078         ; put subroutine
   84 00000078         ; writes a character to the console
   85 00000078         ; parameters:
   86 00000078         ; R0 - ASCII code of the character to write
   87 00000078         ; return value:
   88 00000078         ; none
   89 00000078         ;
   90 00000078 E52D1004 
                       put     PUSH             {R1}
   91 0000007C E59F1034        LDR              R1, =U0LSR  ; R1 -> U0LSR (Line
                                                             Status Register)
   92 00000080 E5D11000        LDRB             R1, [R1]    ; wait until transm
                                                            it
   93 00000084 E2111020        ANDS             R1, R1, #0x20 
                                                            ; holding register



ARM Macro Assembler    Page 3 


   94 00000088 0AFFFFFA        BEQ              put         ; empty
   95 0000008C E59F1028        LDR              R1, =U0THR  ; R1 -> U0THR
   96 00000090 E5C10000        STRB             R0, [R1]    ; output charcter
   97 00000094 E59F101C 
                       put0    LDR              R1, =U0LSR  ; R1 -> U0LSR
   98 00000098 E5D11000        LDRB             R1, [R1]    ; wait until
   99 0000009C E2111040        ANDS             R1, R1, #0x40 ; transmitter
  100 000000A0 0AFFFFFB        BEQ              put0        ; empty (data flush
                                                            ed)
  101 000000A4 E49D1004        POP              {R1}
  102 000000A8 E12FFF1E        BX               LR          ; return
  103 000000AC         
  104 000000AC                 END
              40010000 
              E002C000 
              E000C00C 
              E000C014 
              E000C000 
Command Line: --debug --xref --diag_suppress=9931 --apcs=interwork --depend=.\o
bjects\lab-2-4-console.d -o.\objects\lab-2-4-console.o -IC:\Keil_v5\ARM\RV31\IN
C -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\INC\Philips --predefine="__EV
AL SETA 1" --predefine="__UVISION_VERSION SETA 528" --list=.\listings\lab-2-4-c
onsole.lst Lab-2-4-Console.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

RESET 00000000

Symbol: RESET
   Definitions
      At line 6 in file Lab-2-4-Console.s
   Uses
      None
Comment: RESET unused
STOP 00000028

Symbol: STOP
   Definitions
      At line 32 in file Lab-2-4-Console.s
   Uses
      At line 32 in file Lab-2-4-Console.s
Comment: STOP used once
doGet 00000004

Symbol: doGet
   Definitions
      At line 11 in file Lab-2-4-Console.s
   Uses
      At line 30 in file Lab-2-4-Console.s
Comment: doGet used once
get 00000054

Symbol: get
   Definitions
      At line 72 in file Lab-2-4-Console.s
   Uses
      At line 12 in file Lab-2-4-Console.s
Comment: get used once
get0 0000005C

Symbol: get0
   Definitions
      At line 74 in file Lab-2-4-Console.s
   Uses
      At line 76 in file Lab-2-4-Console.s
Comment: get0 used once
inithw 0000002C

Symbol: inithw
   Definitions
      At line 52 in file Lab-2-4-Console.s
   Uses
      At line 9 in file Lab-2-4-Console.s
Comment: inithw used once
nlcase 0000001C

Symbol: nlcase
   Definitions
      At line 22 in file Lab-2-4-Console.s
   Uses
      At line 18 in file Lab-2-4-Console.s
      At line 20 in file Lab-2-4-Console.s

put 00000078




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Symbol: put
   Definitions
      At line 90 in file Lab-2-4-Console.s
   Uses
      At line 28 in file Lab-2-4-Console.s
      At line 94 in file Lab-2-4-Console.s

put0 00000094

Symbol: put0
   Definitions
      At line 97 in file Lab-2-4-Console.s
   Uses
      At line 100 in file Lab-2-4-Console.s
Comment: put0 used once
9 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

PINSEL0 E002C000

Symbol: PINSEL0
   Definitions
      At line 38 in file Lab-2-4-Console.s
   Uses
      At line 55 in file Lab-2-4-Console.s
Comment: PINSEL0 used once
U0LCR E000C00C

Symbol: U0LCR
   Definitions
      At line 41 in file Lab-2-4-Console.s
   Uses
      At line 58 in file Lab-2-4-Console.s
Comment: U0LCR used once
U0LSR E000C014

Symbol: U0LSR
   Definitions
      At line 42 in file Lab-2-4-Console.s
   Uses
      At line 73 in file Lab-2-4-Console.s
      At line 91 in file Lab-2-4-Console.s
      At line 97 in file Lab-2-4-Console.s

U0RBR E000C000

Symbol: U0RBR
   Definitions
      At line 39 in file Lab-2-4-Console.s
   Uses
      At line 77 in file Lab-2-4-Console.s
Comment: U0RBR used once
U0THR E000C000

Symbol: U0THR
   Definitions
      At line 40 in file Lab-2-4-Console.s
   Uses
      At line 95 in file Lab-2-4-Console.s
Comment: U0THR used once
5 symbols
348 symbols in table
