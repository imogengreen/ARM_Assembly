


ARM Macro Assembler    Page 1 


    1 00000000         ;
    2 00000000         ; CS1022 Introduction to Computing II 2018/2019
    3 00000000         ; Lab 2 - Matrix Multiplication
    4 00000000         ;
    5 00000000         
    6 00000000 00000004 
                       N       EQU              4
    7 00000000         
    8 00000000                 AREA             globals, DATA, READWRITE
    9 00000000         
   10 00000000         ; result array
   11 00000000 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00       ARR_R   SPACE            N*N*4       ; N*N words (4 byte
                                                            s each)
   12 00000040         
   13 00000040         
   14 00000040                 AREA             RESET, CODE, READONLY
   15 00000000                 ENTRY
   16 00000000         
   17 00000000         ; initialize system stack pointer (SP)
   18 00000000 E59FD0F8        LDR              SP, =0x40010000
   19 00000004         
   20 00000004         ;
   21 00000004         ; write your matrix multiplication program here
   22 00000004         ;
   23 00000004         
   24 00000004 E59F20F8        LDR              R2, =ARR_R  ; initialising star
                                                            t address of array 
                                                            R (our result array
                                                            )
   25 00000008 E59F40F8        LDR              R4, =ARR_A  ; initialising star
                                                            t address of array 
                                                            A
   26 0000000C E59F50F8        LDR              R5, =ARR_B  ; initialising star
                                                            t address of array 
                                                            B
   27 00000010 E3A06004        LDR              R6, =N      ; number of rows an
                                                            d columns (N*N matr
                                                            ix)



ARM Macro Assembler    Page 2 


   28 00000014 E3A03000        LDR              R3, =0      ; i=0 (rowCounter);
                                                             
   29 00000018 E3A0B000        LDR              R11, =0     ; j=0 (columnCounte
                                                            r);
   30 0000001C E3A0A000        LDR              R10, =0     ; k=0;
   31 00000020         
   32 00000020         
   33 00000020         
   34 00000020         forLoop
   35 00000020 E1550003        CMP              R5, R3      ; if (i<N)
   36 00000024 0A000014        BEQ              endLoop     ;&&
   37 00000028 E1560003        CMP              R6, R3      ;(j<N)
   38 0000002C 0A00000F        BEQ              rstCounter  ;{
   39 00000030         ; get element from small array
   40 00000030 E0090495        MUL              R9, R5, R4  ; index = row*rowSi
                                                            ze
   41 00000034 E0899006        ADD              R9, R9, R6  ; index = index + c
                                                            ol
   42 00000038 E792A109        LDR              R10, [R2, R9, LSL #2]
   43 0000003C         loop2
   44 0000003C E1560003        CMP              R6, R3
   45 00000040 0A00000A        BEQ              rstCounter  ; get element from 
                                                            large array
   46 00000044 E0070395        MUL              R7, R5, R3  ; index = row*rowSi
                                                            ze
   47 00000048 E0877006        ADD              R7, R7, R6  ; index = index+col
                                                            
   48 0000004C E7918107        LDR              R8, [R1, R7, LSL #2] ; }
   49 00000050         
   50 00000050 E158000A        CMP              R8, R10     ; if value in small
                                                             array = value in l
                                                            arge array
   51 00000054 0A000002        BEQ              equal       ;{
   52 00000058 E2866001        ADD              R6, R6, #1  ;  j++;
   53 0000005C E3A00000        LDR              R0, =0      ;  R0=0;
   54 00000060 EAFFFFF5        B                loop2       ; }
   55 00000064         equal
   56 00000064 E2866001        ADD              R6, R6, #1  ; j++;
   57 00000068 E3A00001        LDR              R0, =1      ; R0=1;
   58 0000006C EAFFFFEB        B                forLoop
   59 00000070         
   60 00000070         rstCounter
   61 00000070 E3A06000        LDR              R6, =0      ; j=0 --> reset the
                                                             columns to zero
   62 00000074 E2855001        ADD              R5, R5, #1  ; i++ --> move down
                                                             to the next row
   63 00000078 EAFFFFE8        B                forLoop
   64 0000007C         endLoop
   65 0000007C         
   66 0000007C         
   67 0000007C EAFFFFFE 
                       STOP    B                STOP
   68 00000080         
   69 00000080         
   70 00000080         ;
   71 00000080         ; test data
   72 00000080         ;
   73 00000080         
   74 00000080 00000001 



ARM Macro Assembler    Page 3 


              00000002 
              00000003 
              00000004 ARR_A   DCD              1,  2,  3,  4
   75 00000090 00000005 
              00000006 
              00000007 
              00000008         DCD              5,  6,  7,  8
   76 000000A0 00000009 
              0000000A 
              0000000B 
              0000000C         DCD              9, 10, 11, 12
   77 000000B0 0000000D 
              0000000E 
              0000000F 
              00000010         DCD              13, 14, 15, 16
   78 000000C0         
   79 000000C0 00000001 
              00000002 
              00000003 
              00000004 ARR_B   DCD              1,  2,  3,  4
   80 000000D0 00000005 
              00000006 
              00000007 
              00000008         DCD              5,  6,  7,  8
   81 000000E0 00000009 
              0000000A 
              0000000B 
              0000000C         DCD              9, 10, 11, 12
   82 000000F0 0000000D 
              0000000E 
              0000000F 
              00000010         DCD              13, 14, 15, 16
   83 00000100         
   84 00000100                 END
              40010000 
              00000000 
              00000000 
              00000000 
Command Line: --debug --xref --diag_suppress=9931 --apcs=interwork --depend=.\o
bjects\lab2-matmul.d -o.\objects\lab2-matmul.o -IC:\Keil_v5\ARM\RV31\INC -IC:\K
eil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\INC\Philips --predefine="__EVAL SETA 
1" --predefine="__UVISION_VERSION SETA 528" --list=.\listings\lab2-matmul.lst l
ab2-matmul.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

ARR_R 00000000

Symbol: ARR_R
   Definitions
      At line 11 in file lab2-matmul.s
   Uses
      At line 24 in file lab2-matmul.s
Comment: ARR_R used once
globals 00000000

Symbol: globals
   Definitions
      At line 8 in file lab2-matmul.s
   Uses
      None
Comment: globals unused
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

ARR_A 00000080

Symbol: ARR_A
   Definitions
      At line 74 in file lab2-matmul.s
   Uses
      At line 25 in file lab2-matmul.s
Comment: ARR_A used once
ARR_B 000000C0

Symbol: ARR_B
   Definitions
      At line 79 in file lab2-matmul.s
   Uses
      At line 26 in file lab2-matmul.s
Comment: ARR_B used once
RESET 00000000

Symbol: RESET
   Definitions
      At line 14 in file lab2-matmul.s
   Uses
      None
Comment: RESET unused
STOP 0000007C

Symbol: STOP
   Definitions
      At line 67 in file lab2-matmul.s
   Uses
      At line 67 in file lab2-matmul.s
Comment: STOP used once
endLoop 0000007C

Symbol: endLoop
   Definitions
      At line 64 in file lab2-matmul.s
   Uses
      At line 36 in file lab2-matmul.s
Comment: endLoop used once
equal 00000064

Symbol: equal
   Definitions
      At line 55 in file lab2-matmul.s
   Uses
      At line 51 in file lab2-matmul.s
Comment: equal used once
forLoop 00000020

Symbol: forLoop
   Definitions
      At line 34 in file lab2-matmul.s
   Uses
      At line 58 in file lab2-matmul.s
      At line 63 in file lab2-matmul.s

loop2 0000003C




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Symbol: loop2
   Definitions
      At line 43 in file lab2-matmul.s
   Uses
      At line 54 in file lab2-matmul.s
Comment: loop2 used once
rstCounter 00000070

Symbol: rstCounter
   Definitions
      At line 60 in file lab2-matmul.s
   Uses
      At line 38 in file lab2-matmul.s
      At line 45 in file lab2-matmul.s

9 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

N 00000004

Symbol: N
   Definitions
      At line 6 in file lab2-matmul.s
   Uses
      At line 11 in file lab2-matmul.s
      At line 11 in file lab2-matmul.s
      At line 27 in file lab2-matmul.s

1 symbol
346 symbols in table
