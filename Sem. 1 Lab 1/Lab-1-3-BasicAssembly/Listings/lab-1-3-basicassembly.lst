


ARM Macro Assembler    Page 1 


    1 00000000         ;
    2 00000000         ; CSU11021 Introduction to Computing I 2019/2020
    3 00000000         ; Basic ARM Assembly Language
    4 00000000         ;
    5 00000000         
    6 00000000                 AREA             RESET, CODE, READONLY
    7 00000000                 ENTRY
    8 00000000         
    9 00000000         ; Write your solution for all parts (i) to (iv) below.
   10 00000000         
   11 00000000         ; Tip: Right-click on any instruction and select 'Run to
                        cursor' to
   12 00000000         ; "fast forward" the processor to that instruction.
   13 00000000         
   14 00000000         ; (i) 3x+y
   15 00000000         
   16 00000000 E3A01002        LDR              R1, =2      ; x = 2
   17 00000004 E3A02003        LDR              R2, =3      ; y = 3
   18 00000008         
   19 00000008         
   20 00000008 E3A03003        MOV              R3, #3
   21 0000000C E0000391        MUL              R0, R1, R3  ; 3x
   22 00000010 E0800002        ADD              R0, R0, R2  ; 3x + y
   23 00000014         
   24 00000014         ; (ii) 3x^2+5x
   25 00000014         
   26 00000014 E3A01002        LDR              R1, =2      ; x = 2
   27 00000018         
   28 00000018         
   29 00000018 E0000191        MUL              R0, R1, R1  ; x^2
   30 0000001C E3A03003        MOV              R3, #3
   31 00000020 E0000093        MUL              R0, R3, R0  ; 3x^2
   32 00000024 E3A03005        MOV              R3, #5
   33 00000028 E0030391        MUL              R3, R1, R3  ; 5x
   34 0000002C E0800003        ADD              R0, R0, R3  ; 3x^2 + 5x
   35 00000030         
   36 00000030         ; (iii) 2x^2+6xy+3y^2
   37 00000030         
   38 00000030 E3A01002        LDR              R1, =2      ; x = 2
   39 00000034 E3A02003        LDR              R2, =3      ; y = 3
   40 00000038         
   41 00000038         
   42 00000038 E0000191        MUL              R0, R1, R1  ; x^2
   43 0000003C E3A03002        MOV              R3, #2
   44 00000040 E0000093        MUL              R0, R3, R0  ; 2x^2
   45 00000044 E0030291        MUL              R3, R1, R2  ; xy
   46 00000048 E3A04006        MOV              R4, #6
   47 0000004C E0030394        MUL              R3, R4, R3  ; 6xy
   48 00000050 E0800003        ADD              R0, R0, R3  ; 2x^2 + 6xy
   49 00000054 E0040292        MUL              R4, R2, R2  ; y^2
   50 00000058 E3A05003        MOV              R5, #3
   51 0000005C E0050594        MUL              R5, R4, R5  ; 3y^2
   52 00000060 E0800005        ADD              R0, R0, R5  ; 2x^2 + 6xy + 3y^2
                                                            
   53 00000064         
   54 00000064         ; (iv) x^3-4x^2+3x+8
   55 00000064         
   56 00000064 E3A01002        LDR              R1, =2      ; x = 2
   57 00000068 E3A02003        LDR              R2, =3      ; y = 3



ARM Macro Assembler    Page 2 


   58 0000006C         
   59 0000006C         
   60 0000006C E0030191        MUL              R3, R1, R1  ; x^2
   61 00000070 E0000391        MUL              R0, R1, R3  ; x^3
   62 00000074 E3A04004        MOV              R4, #4
   63 00000078 E0030394        MUL              R3, R4, R3  ; 4x^2
   64 0000007C E0400003        SUB              R0, R0, R3  ; x^3 - 4x^2
   65 00000080 E3A03003        MOV              R3, #3
   66 00000084 E0030391        MUL              R3, R1, R3  ; 3x
   67 00000088 E0800003        ADD              R0, R0, R3  ; x^3 - 4x^2 + 3x
   68 0000008C E3A03008        MOV              R3, #8
   69 00000090 E0800003        ADD              R0, R0, R3  ; x^3 - 4x^2 + 3x +
                                                             8
   70 00000094         
   71 00000094 EAFFFFFE 
                       STOP    B                STOP
   72 00000098         
   73 00000098                 END
Command Line: --debug --xref --diag_suppress=9931 --apcs=interwork --depend=.\o
bjects\lab-1-3-basicassembly.d -o.\objects\lab-1-3-basicassembly.o -IC:\Keil_v5
\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\INC\Philips --pre
define="__EVAL SETA 1" --predefine="__UVISION_VERSION SETA 528" --list=.\listin
gs\lab-1-3-basicassembly.lst Lab-1-3-BasicAssembly.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

RESET 00000000

Symbol: RESET
   Definitions
      At line 6 in file Lab-1-3-BasicAssembly.s
   Uses
      None
Comment: RESET unused
STOP 00000094

Symbol: STOP
   Definitions
      At line 71 in file Lab-1-3-BasicAssembly.s
   Uses
      At line 71 in file Lab-1-3-BasicAssembly.s
Comment: STOP used once
2 symbols
334 symbols in table
