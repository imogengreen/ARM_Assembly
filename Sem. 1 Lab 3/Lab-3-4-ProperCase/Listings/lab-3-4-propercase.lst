


ARM Macro Assembler    Page 1 


    1 00000000         ;
    2 00000000         ; CSU11021 Introduction to Computing I 2019/2020
    3 00000000         ; Proper Case
    4 00000000         ;
    5 00000000         
    6 00000000                 AREA             RESET, CODE, READONLY
    7 00000000                 ENTRY
    8 00000000         
    9 00000000 E59F0084        LDR              R0, =tststr ; address of existi
                                                            ng string
   10 00000004 E3A01101        LDR              R1, =0x40000000 ; address for n
                                                            ew string
   11 00000008         start
   12 00000008 E5D02000        LDRB             R2, [R0]    ; load R0 into R2
   13 0000000C E3500000        CMP              R0, #0      ; while (char != NU
                                                            LL) 
   14 00000010 0A000019        BEQ              endstr      ; {
   15 00000014 E3520020        CMP              R2, #0x20   ; if (char = SPACE)
                                                            {
   16 00000018 0A000013        BEQ              spchar      ; branch to spchar 
                                                            }
   17 0000001C E3520061        CMP              R2, #'a'    ; if (char >= 'a' 
   18 00000020 3A000002        BLO              lowerc      ; && 
   19 00000024 E352007A        CMP              R2, #'z'    ; char <= 'z')
   20 00000028 8A000000        BHI              lowerc      ; {
   21 0000002C E2422020        SUB              R2, R2, #0x20 ; convert from lo
                                                            wercase to uppercas
                                                            e by subtracting 0x
                                                            20}
   22 00000030         lowerc
   23 00000030 E5C12000        STRB             R2, [R1]    ; store contents of
                                                             R2 into the addres
                                                            s in memory at R1 
   24 00000034         string
   25 00000034 E2800001        ADD              R0, R0, #1  ; address of existi
                                                            ng string++
   26 00000038 E2811001        ADD              R1, R1, #1  ; address of new st
                                                            ring++
   27 0000003C E5D02000        LDRB             R2, [R0]    ; load R0 into R2
   28 00000040 E3500000        CMP              R0, #0      ; while (char != NU
                                                            LL) 
   29 00000044 0A00000C        BEQ              endstr      ; {
   30 00000048 E3520020        CMP              R2, #0x20   ; if (char = SPACE)
                                                            {
   31 0000004C 0A000006        BEQ              spchar      ; branch to spchar 
                                                            }
   32 00000050 E3520041        CMP              R2, #'A'    ; if (char >= 'A' 
   33 00000054 3A000002        BLO              convert     ; && 
   34 00000058 E352005A        CMP              R2, #'Z'    ; char <= 'Z')
   35 0000005C 8A000000        BHI              convert     ; {
   36 00000060 E2822020        ADD              R2, R2, #0x20 ; convert from up
                                                            percase to lowercas
                                                            e by adding 0x20}
   37 00000064         convert
   38 00000064 E5C12000        STRB             R2, [R1]    ; stores into the n
                                                            ew string location 
                                                            at the address in R
                                                            1
   39 00000068 EAFFFFF1        B                string      ; continue to conve



ARM Macro Assembler    Page 2 


                                                            rt to lowercase unt
                                                            il we reach a space
                                                            
   40 0000006C         spchar
   41 0000006C E5C12000        STRB             R2, [R1]    ; copy space into n
                                                            ew string location
   42 00000070 E2800001        ADD              R0, R0, #1  ; address of existi
                                                            ng string++
   43 00000074 E2811001        ADD              R1, R1, #1  ; address of new st
                                                            ring++
   44 00000078 EAFFFFE2        B                start       ; branch back to th
                                                            e start of the stri
                                                            ng 
   45 0000007C         
   46 0000007C         endstr
   47 0000007C E5C01000        STRB             R1, [R0]    ; null-terminates t
                                                            he new string
   48 00000080         
   49 00000080 EAFFFFFE 
                       STOP    B                STOP
   50 00000084         
   51 00000084 54 68 65 
              20 46 4F 
              58 00    tststr  DCB              "The FOX",0
   52 0000008C         
   53 0000008C                 END
              00000000 
Command Line: --debug --xref --diag_suppress=9931 --apcs=interwork --depend=.\o
bjects\lab-3-4-propercase.d -o.\objects\lab-3-4-propercase.o -IC:\Keil_v5\ARM\R
V31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\INC\Philips --predefine
="__EVAL SETA 1" --predefine="__UVISION_VERSION SETA 528" --list=.\listings\lab
-3-4-propercase.lst Lab-3-4-ProperCase.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

RESET 00000000

Symbol: RESET
   Definitions
      At line 6 in file Lab-3-4-ProperCase.s
   Uses
      None
Comment: RESET unused
STOP 00000080

Symbol: STOP
   Definitions
      At line 49 in file Lab-3-4-ProperCase.s
   Uses
      At line 49 in file Lab-3-4-ProperCase.s
Comment: STOP used once
convert 00000064

Symbol: convert
   Definitions
      At line 37 in file Lab-3-4-ProperCase.s
   Uses
      At line 33 in file Lab-3-4-ProperCase.s
      At line 35 in file Lab-3-4-ProperCase.s

endstr 0000007C

Symbol: endstr
   Definitions
      At line 46 in file Lab-3-4-ProperCase.s
   Uses
      At line 14 in file Lab-3-4-ProperCase.s
      At line 29 in file Lab-3-4-ProperCase.s

lowerc 00000030

Symbol: lowerc
   Definitions
      At line 22 in file Lab-3-4-ProperCase.s
   Uses
      At line 18 in file Lab-3-4-ProperCase.s
      At line 20 in file Lab-3-4-ProperCase.s

spchar 0000006C

Symbol: spchar
   Definitions
      At line 40 in file Lab-3-4-ProperCase.s
   Uses
      At line 16 in file Lab-3-4-ProperCase.s
      At line 31 in file Lab-3-4-ProperCase.s

start 00000008

Symbol: start
   Definitions
      At line 11 in file Lab-3-4-ProperCase.s
   Uses
      At line 44 in file Lab-3-4-ProperCase.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Comment: start used once
string 00000034

Symbol: string
   Definitions
      At line 24 in file Lab-3-4-ProperCase.s
   Uses
      At line 39 in file Lab-3-4-ProperCase.s
Comment: string used once
tststr 00000084

Symbol: tststr
   Definitions
      At line 51 in file Lab-3-4-ProperCase.s
   Uses
      At line 9 in file Lab-3-4-ProperCase.s
Comment: tststr used once
9 symbols
343 symbols in table
